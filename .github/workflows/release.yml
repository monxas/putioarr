on:
  push:
    branches:
      - main
      - 'releases/**'
    tags:
      - v*

name: Release Build

env:
  REGISTRY_IMAGE: ghcr.io/wouterdebie/putioarr

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        platform:
          - linux/amd64
          - linux/arm64

    name: Docker + publish
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Docker meta (tag)
        if: startsWith(github.ref, 'refs/tags/')
        id: meta_tag
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY_IMAGE }}
          tags: |
            latest
            type=semver,pattern={{version}}

      - name: Docker meta (branch)
        if: startsWith(github.ref, 'refs/heads/')
        id: meta_branch
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY_IMAGE }}
          tags: |
            type=ref,event=branch

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.CR_PAT }}

      - name: Build and push Docker images (tag)
        id: build_tag
        if: startsWith(github.ref, 'refs/tags/')
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./docker/Dockerfile
          push: true
          platforms: ${{ matrix.platform }}
          labels: ${{ steps.meta_tag.outputs.labels }}
          outputs: type=image,name=${{ env.REGISTRY_IMAGE }},push-by-digest=true,name-canonical=true,push=true
          cache-from: type=gha,scope=build-${{ matrix.platform }}
          cache-to: type=gha,mode=max,scope=build-${{ matrix.platform }}

      - name: Build and push Docker images (branch)
        id: build_branch
        if: startsWith(github.ref, 'refs/heads/')
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./docker/Dockerfile
          push: true
          platforms: ${{ matrix.platform }}
          labels: ${{ steps.meta_branch.outputs.labels }}
          outputs: type=image,name=${{ env.REGISTRY_IMAGE }},push-by-digest=true,name-canonical=true,push=true
          cache-from: type=gha,scope=build-${{ matrix.platform }}
          cache-to: type=gha,mode=max,scope=build-${{ matrix.platform }}

      - name: Prepare a unique name for Artifacts
        id: prep_artifact_name
        run: |
          # The option to enable + in sed regexps differs by OS so we avoid it
          name=$(echo -n "${{ matrix.platform }}" | sed -e 's/[ \t:\/\\"<>|*?]/-/g' -e 's/--*/-/g')
          echo "ARTIFACT_NAME=$name" >> $GITHUB_ENV

          - name: Prepare a unique name for Artifacts
          id: prep_artifact_name
          run: |
            name=$(echo -n "${{ matrix.platform }}" | sed -e 's/[ \t:\/\\"<>|*?]/-/g' -e 's/--*/-/g')
            echo "artifact_name=$name" >> $GITHUB_OUTPUT

      - name: Export digest (tag)
        if: startsWith(github.ref, 'refs/tags/')
        run: |
            mkdir -p /tmp/digests/linux
            digest="${{ steps.build_tag.outputs.digest }}"
            echo "$digest" > "/tmp/digests/${{ matrix.platform }}.digest"

      - name: Export digest (branch)
        if: startsWith(github.ref, 'refs/heads/')
        run: |
            mkdir -p /tmp/digests/linux
            digest="${{ steps.build_branch.outputs.digest }}"
            echo "$digest" > "/tmp/digests/${{ matrix.platform }}.digest"

      - name: Upload digests
        uses: actions/upload-artifact@v4
        with:
          name: "digest-${{ steps.prep_artifact_name.outputs.artifact_name }}"
          path: /tmp/digests/linux/*
          if-no-files-found: error
          retention-days: 1

  merge:
    runs-on: ubuntu-latest
    needs:
      - build
    steps:
      - name: Download digests
        uses: actions/download-artifact@v4
        with:
          name:  "digest-${{ needs.build.outputs.prep_artifact_name.artifact_name }}"
          path: /tmp/digests
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY_IMAGE }}
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.CR_PAT }}
      - name: Create manifest list and push
        working-directory: /tmp/digests
        run: |
          docker buildx imagetools create $(jq -cr '.tags | map("-t " + .) | join(" ")' <<< "$DOCKER_METADATA_OUTPUT_JSON") \
            $(printf '${{ env.REGISTRY_IMAGE }}@sha256:%s ' $(cat *.digest))
      - name: Inspect image
        run: |
          docker buildx imagetools inspect ${{ env.REGISTRY_IMAGE }}:${{ steps.meta.outputs.version }}
